{"ast":null,"code":"var _jsxFileName = \"/Users/anminhstore/Desktop/Desktop_Mac/VNUK/Web_Design_Excercise/exercicse-class/src/components/CounterRow/CounterRow.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CounterRow = props => {\n  _s();\n  const [count, setCount] = React.useState(0);\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n  console.log(props);\n  if (id === 4) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: \"This row is disable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        id: `countButton${props.id}`,\n        className: \"green-button\",\n        onClick: handleClick,\n        children: [\"Button \", props.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: `counter${props.id}`,\n        className: \"counter\",\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(CounterRow, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = CounterRow;\nexport default CounterRow;\nvar _c;\n$RefreshReg$(_c, \"CounterRow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CounterRow","props","_s","count","setCount","useState","handleClick","console","log","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/anminhstore/Desktop/Desktop_Mac/VNUK/Web_Design_Excercise/exercicse-class/src/components/CounterRow/CounterRow.js"],"sourcesContent":["import React from 'react';\n\nconst CounterRow = (props) => {\n    const [count, setCount] = React.useState(0);\n\n    const handleClick = () => {\n        setCount(count + 1);\n    }\n\n    console.log(props)\n\n\n    if(id === 4){\n        return <div className='row'>This row is disable</div>\n    }else{\n        return (<div className=\"row\">\n            <button id={`countButton${props.id}`} className=\"green-button\" onClick={handleClick}>\n                Button {props.id}\n            </button>\n            <div id={`counter${props.id}`} className=\"counter\">\n                {count}\n            </div>\n        </div>)\n    }\n\n}\n\nexport default CounterRow;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtBF,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACvB,CAAC;EAEDI,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EAGlB,IAAGQ,EAAE,KAAK,CAAC,EAAC;IACR,oBAAOV,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACzD,CAAC,MAAI;IACD,oBAAQhB,OAAA;MAAKW,SAAS,EAAC,KAAK;MAAAC,QAAA,gBACxBZ,OAAA;QAAQU,EAAE,EAAG,cAAaR,KAAK,CAACQ,EAAG,EAAE;QAACC,SAAS,EAAC,cAAc;QAACM,OAAO,EAAEV,WAAY;QAAAK,QAAA,GAAC,SAC1E,EAACV,KAAK,CAACQ,EAAE;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC,eACThB,OAAA;QAAKU,EAAE,EAAG,UAASR,KAAK,CAACQ,EAAG,EAAE;QAACC,SAAS,EAAC,SAAS;QAAAC,QAAA,EAC7CR;MAAK;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EACV;AAEJ,CAAC;AAAAb,EAAA,CAvBKF,UAAU;AAAAiB,EAAA,GAAVjB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}